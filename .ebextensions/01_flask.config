option_settings:
  aws:elasticbeanstalk:application:environment:
    FLASK_APP: app.py
    PYTHONPATH: "/var/app/current"
    MAX_CONTENT_LENGTH: "30000000"  # Add this line to set max content length to 20MB
  aws:elasticbeanstalk:container:python:
    WSGIPath: app:app
  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx
  aws:elasticbeanstalk:command:  # Add this section
    Timeout: 1800

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_gunicorn_timeout.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      
      # Create systemd override directory if it doesn't exist
      mkdir -p /etc/systemd/system/gunicorn.service.d/
      
      # Create timeout configuration
      cat > /etc/systemd/system/gunicorn.service.d/timeout.conf << EOL
      [Service]
      TimeoutSec=300
      EOL
      
      # Reload systemd and restart the service
      systemctl daemon-reload
      systemctl restart gunicorn
      
  "/opt/elasticbeanstalk/hooks/configdeploy/post/99_gunicorn_timeout.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      
      # Create systemd override directory if it doesn't exist
      mkdir -p /etc/systemd/system/gunicorn.service.d/
      
      # Create timeout configuration
      cat > /etc/systemd/system/gunicorn.service.d/timeout.conf << EOL
      [Service]
      TimeoutSec=300
      EOL
      
      # Reload systemd and restart the service
      systemctl daemon-reload
      systemctl restart gunicorn
      
  # Add a custom Gunicorn configuration file
  "/etc/gunicorn.conf.py":
    mode: "000644"
    owner: root
    group: root
    content: |
      timeout = 300
      workers = 3
      worker_class = 'gevent'
      worker_connections = 1000
      max_requests = 1000
      max_requests_jitter = 50